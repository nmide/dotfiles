(function() {
  var checkHex, getOption, hexToRgb, rgbToHex, setAccent, setFontsize, setSyntax, toConsole;

  module.exports = rgbToHex = function(r, g, b) {
    return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);
  };

  hexToRgb = function(hex) {
    var result;
    result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    if (result) {
      return {
        r: parseInt(result[1], 16),
        g: parseInt(result[2], 16),
        b: parseInt(result[3], 16)
      };
    } else {
      return null;
    }
  };

  checkHex = function(hex) {
    var reg, str;
    reg = /^#([\da-fA-F]{2})([\da-fA-F]{2})([\da-fA-F]{2})$/;
    str = hex;
    if (str.match(reg)) {
      return true;
    }
  };

  setAccent = function(accent) {
    var fs, path, writePath;
    fs = require('fs');
    path = require('path');
    writePath = path.join(__dirname, '..', 'styles/ui-accent.less');
    return fs.writeFileSync(writePath, "@accent-color: " + (rgbToHex(accent.red, accent.green, accent.blue)) + ";\n");
  };

  setFontsize = function(size) {
    var fs, path, writePath;
    fs = require('fs');
    path = require('path');
    writePath = path.join(__dirname, '..', 'styles/ui-fontsize.less');
    return fs.writeFileSync(writePath, "@font-size: " + size + "px;\n");
  };

  setSyntax = function(trigger) {
    var content, fs, path, writePath;
    fs = require('fs');
    path = require('path');
    writePath = path.join(__dirname, '..', 'styles/ui-syntax-include.less');
    content = trigger ? '@import "ui-syntax";\n' : '\n';
    return fs.writeFileSync(writePath, content);
  };

  getOption = function(option) {
    switch (option) {
      case 'accentColor':
        return atom.config.get('accents-ui.accentColor');
      case 'hexColor':
        return atom.config.get('accents-ui.hexColor');
      case 'fontSize':
        return atom.config.get('accents-ui.fontSize');
      case 'useSyntax':
        return atom.config.get('accents-ui.useSyntax');
      case 'debugMode':
        return atom.config.get('accents-ui.debugMode');
    }
  };

  toConsole = function(key, val, returnVal) {
    if (getOption('debugMode')) {
      console.log('accents-ui :: ' + key + ' : ' + val);
    }
    if (returnVal) {
      return val;
    }
  };

  setAccent(getOption('accentColor'));

  setFontsize(getOption('fontSize'));

  setSyntax(getOption('useSyntax'));

  atom.config.onDidChange('accents-ui.accentColor', function() {
    var color;
    color = getOption('accentColor');
    setAccent(toConsole('accent colour object', color, true));
    toConsole('accent colour Hex', color.toHexString(), false);
    if (getOption('debugMode')) {
      console.log(color);
    }
    return atom.config.set('accents-ui.hexColor', rgbToHex(color.red, color.green, color.blue));
  });

  atom.config.onDidChange('accents-ui.hexColor', function() {
    var color, hex, isHex, rgb;
    hex = getOption('hexColor');
    isHex = checkHex(hex);
    rgb = hexToRgb(hex);
    color = getOption('accentColor');
    if (isHex) {
      color.red = rgb.r;
      color.green = rgb.g;
      color.blue = rgb.b;
      return atom.config.set('accents-ui.accentColor', color);
    }
  });

  atom.config.onDidChange('accents-ui.fontSize', function() {
    return setSyntax(toConsole('font size', getOption('fontSize'), true));
  });

  atom.config.onDidChange('accents-ui.useSyntax', function() {
    return setSyntax(toConsole('override syntax', getOption('useSyntax'), true));
  });

  atom.config.onDidChange('accents-ui.debugMode', function() {
    return toConsole('debug mode', getOption('debugMode'), false);
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvbmljay8uYXRvbS9wYWNrYWdlcy9mdXNpb24tdWkvbGliL2NvbmZpZy5jb2ZmZWUiCiAgXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiQUFBQTtBQUFBLE1BQUEscUZBQUE7O0FBQUEsRUFBQSxNQUFNLENBQUMsT0FBUCxHQUlBLFFBQUEsR0FBVyxTQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxHQUFBO1dBQ1AsR0FBQSxHQUFNLENBQUMsQ0FBQyxDQUFBLElBQUssRUFBTixDQUFBLEdBQVksQ0FBQyxDQUFBLElBQUssRUFBTixDQUFaLEdBQXdCLENBQUMsQ0FBQSxJQUFLLENBQU4sQ0FBeEIsR0FBbUMsQ0FBcEMsQ0FBc0MsQ0FBQyxRQUF2QyxDQUFnRCxFQUFoRCxDQUFtRCxDQUFDLEtBQXBELENBQTBELENBQTFELEVBREM7RUFBQSxDQUpYLENBQUE7O0FBQUEsRUFRQSxRQUFBLEdBQVcsU0FBQyxHQUFELEdBQUE7QUFDUCxRQUFBLE1BQUE7QUFBQSxJQUFBLE1BQUEsR0FBUywyQ0FBMkMsQ0FBQyxJQUE1QyxDQUFpRCxHQUFqRCxDQUFULENBQUE7QUFDQSxJQUFBLElBQUcsTUFBSDthQUNJO0FBQUEsUUFBQSxDQUFBLEVBQUcsUUFBQSxDQUFTLE1BQU8sQ0FBQSxDQUFBLENBQWhCLEVBQW9CLEVBQXBCLENBQUg7QUFBQSxRQUNBLENBQUEsRUFBRyxRQUFBLENBQVMsTUFBTyxDQUFBLENBQUEsQ0FBaEIsRUFBb0IsRUFBcEIsQ0FESDtBQUFBLFFBRUEsQ0FBQSxFQUFHLFFBQUEsQ0FBUyxNQUFPLENBQUEsQ0FBQSxDQUFoQixFQUFvQixFQUFwQixDQUZIO1FBREo7S0FBQSxNQUFBO2FBS0ksS0FMSjtLQUZPO0VBQUEsQ0FSWCxDQUFBOztBQUFBLEVBa0JBLFFBQUEsR0FBVyxTQUFDLEdBQUQsR0FBQTtBQUNQLFFBQUEsUUFBQTtBQUFBLElB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

//# sourceURL=/home/nick/.atom/packages/fusion-ui/lib/config.coffee
